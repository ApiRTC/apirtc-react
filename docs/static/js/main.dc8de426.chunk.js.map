{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Conversation","props","state","name","conversation","handleNameChange","bind","getOrCreateConversation","event","this","setState","target","value","console","log","preventDefault","localStream","ua","UserAgent","uri","register","then","session","getConversation","on","streamInfo","listEventType","isRemote","subscribeToMedia","streamId","stream","catch","err","error","addInDiv","removeFromDiv","createStream","constraints","audio","video","join","response","publish","hasConversation","id","onSubmit","type","placeholder","onChange","title","React","Component","App","className","alt","src","process","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAMMA,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,GAAIC,aAAc,MAEvC,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBALd,E,oDAQnB,SAAiBE,GAASC,KAAKC,SAAS,CAAEP,KAAMK,EAAMG,OAAOC,U,qCAE7D,SAAwBJ,GAAQ,IAAD,OAC7BK,QAAQC,IAAI,0BAA2BN,GACvCA,EAAMO,iBAEN,IAAIC,EAAc,KAKdC,EAAK,IAAIC,YAAU,CACrBC,IAAK,wBAMPF,EAAGG,WAAWC,MAAK,SAACC,GAKlB,IAAMlB,EAAekB,EAAQC,gBAAgB,EAAKrB,MAAMC,MACxD,EAAKO,SAAS,CAAEN,aAAcA,IAK9BA,EAAaoB,GAAG,qBAAqB,SAACC,GACpCZ,QAAQC,IAAI,sBAAuBW,GACF,UAA7BA,EAAWC,gBACe,IAAxBD,EAAWE,UACbvB,EAAawB,iBAAiBH,EAAWI,UACtCR,MAAK,SAACS,GACLjB,QAAQC,IAAI,+BACXiB,OAAM,SAACC,GACRnB,QAAQoB,MAAM,yBAA0BD,SAQlD5B,EAAaoB,GAAG,eAAe,SAACM,GAC9BA,EAAOI,SAAS,mBAAoB,gBAAkBJ,EAAOD,SAAU,IAAI,MAC1EL,GAAG,iBAAiB,SAACM,GACtBA,EAAOK,cAAc,mBAAoB,gBAAkBL,EAAOD,aAMpEZ,EAAGmB,aAAa,CACdC,YAAa,CACXC,OAAO,EACPC,OAAO,KAGRlB,MAAK,SAACS,GAELjB,QAAQC,IAAI,iBAAkBgB,GAG9Bd,EAAcc,EACdA,EAAOK,cAAc,kBAAmB,eACxCL,EAAOI,SAAS,kBAAmB,cAAe,IAAI,GAKtD9B,EAAaoC,OACVnB,MAAK,SAACoB,GAILrC,EACGsC,QAAQ1B,GACRK,MAAK,SAACS,GACLjB,QAAQC,IAAI,YAAagB,MAE1BC,OAAM,SAACC,GACNnB,QAAQoB,MAAM,gBAAiBD,SAElCD,OAAM,SAACC,GACRnB,QAAQoB,MAAM,0BAA2BD,SAG5CD,OAAM,SAACC,GACRnB,QAAQoB,MAAM,sBAAuBD,W,oBAM7C,WACE,IAAMW,EAA8C,OAA5BlC,KAAKP,MAAME,aACnC,OACE,8BACIuC,EAMA,gCACE,qBAAKC,GAAG,qBAER,qBAAKA,GAAG,uBARV,uBAAMC,SAAUpC,KAAKF,wBAArB,UACE,uBAAOuC,KAAK,OAAOC,YAAY,OAAOnC,MAAOH,KAAKP,MAAMC,KAAM6C,SAAUvC,KAAKJ,mBAD/E,QAEE,wBAAQyC,KAAK,SAASG,MAAM,6BAA5B,8C,GAjHeC,IAAMC,WA4IlBC,MAbf,WAEE,OACE,sBAAKC,UAAU,MAAf,UACE,8BACE,qBAAKC,IAAI,cAAcC,IAAKC,2BAAwCC,MAAM,KAAKC,OAAO,OADxF,YAEE,qBAAKJ,IAAI,aAAaC,IAAKC,4BAAyCC,MAAM,KAAKC,OAAO,UAExF,cAAC,EAAD,QCjISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc8de426.chunk.js","sourcesContent":["import './App.css';\n\nimport React from 'react';\n\nimport { UserAgent } from '@apirtc/apirtc';\n\nclass Conversation extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { name: '', conversation: null };\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.getOrCreateConversation = this.getOrCreateConversation.bind(this);\n  }\n\n  handleNameChange(event) { this.setState({ name: event.target.value }); }\n\n  getOrCreateConversation(event) {\n    console.log(\"getOrCreateConversation\", event);\n    event.preventDefault();\n\n    var localStream = null;\n\n    //==============================\n    // 1/ CREATE USER AGENT\n    //==============================\n    var ua = new UserAgent({\n      uri: 'apzkey:myDemoApiKey'\n    });\n\n    //==============================\n    // 2/ REGISTER\n    //==============================\n    ua.register().then((session) => {\n\n      //==============================\n      // 3/ CREATE CONVERSATION\n      //==============================\n      const conversation = session.getConversation(this.state.name);\n      this.setState({ conversation: conversation });\n\n      //==========================================================\n      // 4/ ADD EVENT LISTENER : WHEN NEW STREAM IS AVAILABLE IN CONVERSATION\n      //==========================================================\n      conversation.on('streamListChanged', (streamInfo) => {\n        console.log(\"streamListChanged :\", streamInfo);\n        if (streamInfo.listEventType === 'added') {\n          if (streamInfo.isRemote === true) {\n            conversation.subscribeToMedia(streamInfo.streamId)\n              .then((stream) => {\n                console.log('subscribeToMedia success');\n              }).catch((err) => {\n                console.error('subscribeToMedia error', err);\n              });\n          }\n        }\n      });\n      //=====================================================\n      // 4 BIS/ ADD EVENT LISTENER : WHEN STREAM IS ADDED/REMOVED TO/FROM THE CONVERSATION\n      //=====================================================\n      conversation.on('streamAdded', (stream) => {\n        stream.addInDiv('remote-container', 'remote-media-' + stream.streamId, {}, false);\n      }).on('streamRemoved', (stream) => {\n        stream.removeFromDiv('remote-container', 'remote-media-' + stream.streamId);\n      });\n\n      //==============================\n      // 5/ CREATE LOCAL STREAM\n      //==============================\n      ua.createStream({\n        constraints: {\n          audio: true,\n          video: true\n        }\n      })\n        .then((stream) => {\n\n          console.log('createStream :', stream);\n\n          // Save local stream\n          localStream = stream;\n          stream.removeFromDiv('local-container', 'local-media');\n          stream.addInDiv('local-container', 'local-media', {}, true);\n\n          //==============================\n          // 6/ JOIN CONVERSATION\n          //==============================\n          conversation.join()\n            .then((response) => {\n              //==============================\n              // 7/ PUBLISH LOCAL STREAM\n              //==============================\n              conversation\n                .publish(localStream)\n                .then((stream) => {\n                  console.log(\"published\", stream);\n                })\n                .catch((err) => {\n                  console.error(\"publish error\", err);\n                });\n            }).catch((err) => {\n              console.error('Conversation join error', err);\n            });\n\n        }).catch((err) => {\n          console.error('create stream error', err);\n        });\n\n    });\n  }\n\n  render() {\n    const hasConversation = this.state.conversation !== null;\n    return (\n      <div>\n        {!hasConversation ?\n          <form onSubmit={this.getOrCreateConversation} >\n            <input type=\"text\" placeholder=\"abcd\" value={this.state.name} onChange={this.handleNameChange} /> &nbsp;\n            <button type=\"submit\" title=\"Get Or Create Conversation\">GetOrCreateConversation</button>\n          </form>\n          :\n          <div>\n            <div id=\"remote-container\">\n            </div>\n            <div id=\"local-container\">\n            </div>\n          </div>\n        }\n      </div>)\n  }\n}\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <p>\n        <img alt=\"ApiRTC logo\" src={process.env.PUBLIC_URL + '/ApiRTC.png'} width=\"66\" height=\"76\" />&nbsp;&&nbsp;\n        <img alt=\"React logo\" src={process.env.PUBLIC_URL + '/logo192.png'} width=\"76\" height=\"76\" />\n      </p>\n      <Conversation></Conversation>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}